
@{
    ViewBag.Title = "Reserve";
}
@section CustomJs{

}

<div id="app">
    <div class="sub-heard-part">
        <ol class="breadcrumb m-b-0">
            <li><a href="#" onclick='$("#div1").load("/pdskc/Index")'>入库管理</a></li>
            <li><a href="#">库存商品信息</a></li>
            <!--<a class="btn green two" href="#" onclick='$("#div1").load("/buy/StocksAdd.html")' style="float: right;font-size:10px">新增订单</a>-->

        </ol>

    </div>

    <div class="graph">
        <div class="row">
            <form class="form-inline">
                <div class="form-group">
                    <label for="exampleInputName2">编号:</label>
                    <input v-model="DSID" type="text" class="form-control" id="exampleInputName2" placeholder="请输入">
                </div>
                @*<div class="form-group">
                        <label for="exampleInputEmail2">创建人:</label>
                        <input type="email" class="form-control" id="exampleInputEmail2" placeholder="请输入">
                    </div>*@
                <div class="form-group">
                    <label for="exampleInputEmail2">状态:</label>
                    <select v-model="Status" class="form-control">
                        <option value="-1">请选择</option>
                        <option value="0">正常</option>
                        <option value="1">爆库</option>
                        <option value="2">缺货</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="exampleInputEmail2">仓库:</label>
                    <select v-model="Depot" class="form-control">
                        <option value="-1">请选择</option>
                        <option v-for="m in Depots" :value="m.DepotID">{{m.DepotName}}</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-default" @@click="select()">查询</button>
            </form>
        </div>
        <div class="tables row">
            <table class="table table-striped table-bordered table-hover table-condensed">
                <thead>

                    <tr>
                        <th width="14%">
                            编号
                        </th>
                        <th width="8%">商品名称</th>
                        <th width="9%">生产厂家</th>
                        <th width="9%">所属类别</th>
                        <th width="9%">销售价格</th>
                        <th width="10%">
                            库存数量
                        </th>
                        <th width="12%">
                            预售金额
                        </th>

                        <th width="12%">
                            状态
                        </th>
                        <th width="17%">
                            操作
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(m,index) in data">
                        <td>{{m.DSID}}</td>
                        <td>{{m.ProName}}</td>
                        <td>{{m.ProWorkShop}}</td>
                        <td>{{m.PTName}}</td>
                        <td>{{m.ProPrice}}</td>
                        <td>{{m.DSAmount}}</td>
                        <td>{{m.ProInPrice}}</td>
                        <td>{{status(m)}}</td>
                        <td><a href="#" @@click="dian2(m.ProID)">查看</a></td>
                    </tr>

                </tbody>
            </table>
            <div align="center">
                <div id="test1"></div>
                @*<nav aria-label="Page navigation">
                        <ul class="pagination">
                            <li>
                                <a href="#" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                            <li><a href="#">1</a></li>
                            <li><a href="#">2</a></li>
                            <li><a href="#">3</a></li>
                            <li><a href="#">4</a></li>
                            <li><a href="#">5</a></li>
                            <li>
                                <a href="#" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>*@
            </div>
        </div>
    </div>
</div>

<script>
    var app = new Vue({
        el: "#app",
        data: {
            data: [],
            total: 0,
            ps: 3,
            pi: 1,
            DSID: '',
            Status: '-1',
            Depot: '-1',
            Depots:[],
        },
        created: function () {
            this.$http.get("http://localhost:8625/api/buy/GetDS_P_Ds", { "params": { "ps": this.ps, "pi": this.pi } }).then(result => {
                    this.data = result.data.data
                    this.total = result.data.total
                })
            this.$http.get("http://localhost:8625/api/Basic/GetDepots", { "params": { "ps": 999, "pi": 1 } }).then(result => {
                this.Depots = result.data.data
            })
        },
        methods: {
            status: function (m) {
                return m.DSAmount >= m.ProMax ? "爆库" : m.DSAmount <= m.ProMin ? "缺货" : "正常"
            },
            dian: function (ps, pi) {
                this.$http.get("http://localhost:8625/api/buy/GetDS_P_Ds", { "params": { "ps": ps, "pi": pi } })
                    .then(d => {
                        this.data = d.data.data
                        this.total = d.data.total
                    })
            },
            dian2: function (ProID) {
                $('#div1').load('/buy/ReserveDetail?ProID=' + ProID)
            },
            dian3: function (ps, pi) {
                this.$http.get("http://localhost:8625/api/buy/GetDSPDs_P", { "params": { "ps": ps, "pi": pi, "DSID": this.DSID, "Status": this.Status, "Depot": this.Depot } }).then(result => {
                    this.data = result.data.data
                    this.total = result.data.total
                })
            },
            select: function (event) {
                this.$http.get("http://localhost:8625/api/buy/GetDSPDs_P", { "params": { "ps": this.ps, "pi": this.pi, "DSID": this.DSID, "Status": this.Status, "Depot": this.Depot, } }).then(result => {
                    this.data = result.data.data
                    this.total = result.data.total

                    laypage.render({
                        elem: 'test1' //注意，这里的 test1 是 ID，不用加 # 号
                        , count: result.data.total //数据总数，从服务端得到
                        , limit: app.ps
                        , limits: [1, 2, 3, 4, 5]
                        , layout: ['prev', 'page', 'next', 'limit', 'count', 'skip']
                        , jump: function (obj, first) {
                            //obj包含了当前分页的所有参数，比如：
                            //console.log(obj.curr); 得到当前页，以便向服务端请求对应页的数据。
                            //console.log(obj.limit); 得到每页显示的条数
                            app.dian3(obj.limit, obj.curr)
                            //首次不执行
                            if (!first) {
                                //do something
                            }
                        }
                    })
                })
                event.preventDefault();
            }
        }
    });
    var laypage;
    $(function () {
        laypage = layui.laypage;
        //执行一个laypage实例
        laypage.render({
            elem: 'test1' //注意，这里的 test1 是 ID，不用加 # 号
            , count: app.total //数据总数，从服务端得到
            , limit: app.ps
            , limits: [1, 2, 3, 4, 5]
            , layout: ['prev', 'page', 'next', 'limit', 'count', 'skip']
            , jump: function (obj, first) {
                //obj包含了当前分页的所有参数，比如：
                //console.log(obj.curr); 得到当前页，以便向服务端请求对应页的数据。
                //console.log(obj.limit); 得到每页显示的条数
                app.dian(obj.limit, obj.curr)
                app.ps = this.limit
                //首次不执行
                if (!first) {
                    //do something
                }
            }
        });
    });
</script>

